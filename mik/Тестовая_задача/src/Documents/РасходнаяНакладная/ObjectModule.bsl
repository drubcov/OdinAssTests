#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, Режим)
	// регистр ТоварыНаСкладах Расход
	Движения.ТоварыНаСкладах.Записывать = Истина;
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ТоварыНаСкладах.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Склад = Склад;
		Движение.Организация = Организация;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;                  
	
	// Проверка Остатков
	Движения.ТоварыНаСкладах.Записать();
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	|	ТоварыНаСкладахОстатки.Склад КАК Склад,
	|	ТоварыНаСкладахОстатки.Организация КАК Организация,
	|	-ТоварыНаСкладахОстатки.КоличествоОстаток КАК Количество
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(
	|			&ДатаДок,
	|			Организация = &Организация
	|				И Склад = &Склад
	|				И Номенклатура В
	|					(ВЫБРАТЬ
	|						РасходнаяНакладнаяТовары.Номенклатура КАК Номенклатура
	|					ИЗ
	|						Документ.РасходнаяНакладная.Товары КАК РасходнаяНакладнаяТовары
	|					ГДЕ
	|						РасходнаяНакладнаяТовары.Ссылка = &Ссылка)) КАК ТоварыНаСкладахОстатки
	|ГДЕ
	|	ТоварыНаСкладахОстатки.КоличествоОстаток < 0";
	
	Запрос.УстановитьПараметр("ДатаДок", Новый Граница(МоментВремени(), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Отказ = Истина;
		
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "На складе " + ВыборкаДетальныеЗаписи.Склад + " по организации " + ВыборкаДетальныеЗаписи.Организация  + " не хватает товара " + ВыборкаДетальныеЗаписи.Номенклатура 
			+ " в количестве " + ВыборкаДетальныеЗаписи.Количество + " единиц";
			Сообщение.Сообщить();
		КонецЦикла;
	КонецЕсли;                           
	
	// Получение учетной политики на дату документа
	МетодСписания = Неопределено;	
	Если НЕ Отказ Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	УчетныеПолитикиСрезПоследних.МетодСписанияТоваров КАК МетодСписанияТоваров
		|ИЗ
		|	РегистрСведений.УчетныеПолитики.СрезПоследних(&ДатаДокумента, Организация = &Организация) КАК УчетныеПолитикиСрезПоследних";
		
		Запрос.УстановитьПараметр("ДатаДокумента", МоментВремени());
		Запрос.УстановитьПараметр("Организация", Организация);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			МетодСписания = ВыборкаДетальныеЗаписи.МетодСписанияТоваров;
		Иначе 
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Учетная политика списания себестоимости товаров по оргранизации " + Организация + "на дату " + Формат(Дата, "ДЛФ=D") + " не определена, проведение невозможно";
			Сообщение.Сообщить();
			
			Отказ = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		
		// Получение себестоимости и партий 
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СебестоимостьОстатки.Номенклатура КАК Номенклатура,
		|	СебестоимостьОстатки.Партия КАК Партия,
		|	СебестоимостьОстатки.КомисионныйТовар КАК КомисионныйТовар,
		|	СебестоимостьОстатки.СуммаОстаток КАК СуммаОстаток,
		|	СебестоимостьОстатки.КоличествоОстаток КАК КоличествоОстаток,
		|	ПриходнаяНакладная.Дата КАК ДатаПартии,
		|	ПриходнаяНакладная.Контрагент КАК Поставщик,
		|	ПриходнаяНакладная.Договор КАК Договор,
		|	ПриходнаяНакладная.Договор.ПроцентКомиссии КАК ПроцентКомиссии,
		|	ПриходнаяНакладная.Договор.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыЗакупки.Комиссия) КАК ЭтоКомиссия
		|ИЗ
		|	РегистрНакопления.Себестоимость.Остатки(
		|			&ДатаДокумента,
		|			Организация = &Организация
		|				И Номенклатура В
		|					(ВЫБРАТЬ
		|						РасходнаяНакладнаяТовары.Номенклатура КАК Номенклатура
		|					ИЗ
		|						Документ.РасходнаяНакладная.Товары КАК РасходнаяНакладнаяТовары
		|					ГДЕ
		|						РасходнаяНакладнаяТовары.Ссылка = &Ссылка)) КАК СебестоимостьОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходнаяНакладная КАК ПриходнаяНакладная
		|		ПО СебестоимостьОстатки.Партия = ПриходнаяНакладная.Ссылка
		|ГДЕ
		|	СебестоимостьОстатки.КоличествоОстаток > 0";
		
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("ДатаДокумента", Новый Граница(МоментВремени(), ВидГраницы.Включая));
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ТаблицаСебестоимости = РезультатЗапроса.Выгрузить(); 
		//Если МетодСписания = Перечисления.МетодыСписанияТоваров.FIFO Тогда
		//	ТаблицаСебестоимости.Сортировать("ДатаПартии Возр");
		//Иначе
		//	ТаблицаСебестоимости.Сортировать("ДатаПартии Убыв");
		//КонецЕсли;
		//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		//
		//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		//	// Вставить обработку выборки ВыборкаДетальныеЗаписи
		//КонецЦикла;  
		Движения.Себестоимость.Записывать = Истина;
		Движения.ВзаиморасчетыСКомитентами.Записывать = Истина; 
		
		Для каждого СтрокаТЧ Из Товары Цикл
			//Ищем партии списываем по количеству 
			тзПартииТовара = ТаблицаСебестоимости.Скопировать(Новый Структура("Номенклатура", СтрокаТЧ.Номенклатура));
			Если тзПартииТовара.Количество() = 0 Тогда   
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Для товара " + СтрокаТЧ.Номенклатура + " отсутствуют партии с остатком себестоимости";
				Сообщение.Сообщить();
				Отказ = Истина; 
				Продолжить;
			КонецЕсли;     
			Если МетодСписания = Перечисления.МетодыСписанияТоваров.FIFO Тогда
				тзПартииТовара.Сортировать("ДатаПартии Возр");
			Иначе
				тзПартииТовара.Сортировать("ДатаПартии Убыв");
			КонецЕсли;
			
			КоличествоКСписанию = СтрокаТЧ.Количество; 
			индексПартий = 0;
			
			Пока КоличествоКСписанию > 0 Цикл
				НужнаСледующаяПартия = Ложь;
				Прибыль = 0;
				
				КоличествоПартии = тзПартииТовара[индексПартий].КоличествоОстаток;
				СтоимостьПартии = тзПартииТовара[индексПартий].СуммаОстаток;
				СебестоимостьПартии = ?(КоличествоПартии = 0, 0, СтоимостьПартии / КоличествоПартии);
				
				// регистр Себестоимость Расход
				Движение = Движения.Себестоимость.Добавить();
				Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
				Движение.Период = Дата;
				Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
				Движение.Партия = тзПартииТовара[индексПартий].Партия;
				Движение.КомисионныйТовар = тзПартииТовара[индексПартий].КомисионныйТовар;   
				
				Если КоличествоПартии < КоличествоКСписанию Тогда
					Движение.Количество = КоличествоПартии;
					Движение.Сумма = СтоимостьПартии;   
					Прибыль = КоличествоПартии * СтрокаТЧ.Цена - СтоимостьПартии;
					НужнаСледующаяПартия = Истина;
				Иначе // Если больше или равно - списываем все количество документа
					Движение.Количество = КоличествоКСписанию; 
					Движение.Сумма = КоличествоКСписанию * СебестоимостьПартии;
					Прибыль = КоличествоКСписанию * СтрокаТЧ.Цена - Движение.Сумма;  
					
				КонецЕсли;
				КоличествоКСписанию = КоличествоКСписанию - КоличествоПартии;    
				
				// регистр ВзаиморасчетыСКомитентами Приход
				// нужно записывать только когда товар комиссионный
				Если тзПартииТовара[индексПартий].ЭтоКомиссия Тогда
		
					Движение = Движения.ВзаиморасчетыСКомитентами.Добавить();
					Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
					Движение.Период = Дата;
					Движение.Контрагент = тзПартииТовара[индексПартий].Поставщик; 
					Движение.Организация =  Организация;
					Движение.Договор = тзПартииТовара[индексПартий].Договор;
					Движение.Сумма = Прибыль * тзПартииТовара[индексПартий].ПроцентКомиссии / 100 ;        
				КонецЕсли; 
				Если НужнаСледующаяПартия Тогда
					индексПартий = индексПартий + 1;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;	
КонецПроцедуры
#КонецОбласти
